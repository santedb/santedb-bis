<?xml version="1.0" encoding="UTF-8"?>
<BiDatamartDefinition xmlns="http://santedb.org/bi" id="org.santedb.bi.datamart.core"
    name="core-datamart" label="core-datamart">


  <meta status="active" version="3.0">
    <authors>
      <add>SanteSuite Inc. and the SanteSuite Contributors</add>
    </authors>
    <annotation>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>
          This transform definition is responsible for populating the default SanteDB data mart schema from which most default SanteDB reports and
          informational assets are derived. You can extend this data mart by defining your own "based on" this data-mart which will re-use all the
          tables, views and transforms contained in this definition
        </p>
      </div>
    </annotation>
    <public>false</public>
  </meta>

  <produces id="org.santedb.bi.dataSource.warehouse" name="warehouse">
    <meta status="active">
      <policies>
        <!-- This requires query clinical data -->
        <demand>1.3.6.1.4.1.33349.3.1.5.9.2.2.0</demand>
      </policies>
    </meta>
  </produces>

  <schema>

    <table name="SEC_USR_TBL">
      <column type="uuid" key="true" notNull="true" unique="true" name="USR_ID"/>
      <column type="string" notNull="true" name="USERNAME" />
      <column type="date-time" notNull="true" name="CREATED_TIME" />
      <column type="ref" notNull="true" name="CREATED_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
      <column type="date-time" name="LAST_LOGIN_DATE" />
      <column type="string" name="EMAIL" />
      <column type="string" name="PHONE" />
      <column type="date-time" name="OBSOLETE_TIME"/>
      <column type="ref" name="OBSOLETE_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
    </table>

    <table name="ENT_TBL">
      <column type="uuid" notNull="true" unique="true" key="true" name="ENT_ID" />
      <column type="uuid" notNull="true" unique="true" name="VERSION" />
      <column type="string" index="true" notNull="true" name="CLASS" />
      <column type="string" notNull="true" name="DETERMINER" />
      <column type="string" name="TYPE" />
      <column type="string" name="TEMPLATE" />
      <column type="decimal" name="LAT"/>
      <column type="decimal" name="LNG"/>
      <column type="date-time" notNull="true" name="CREATED_TIME"/>
      <column type="ref" notNull="true" name="CREATED_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
      <column type="date-time" name="OBSOLETE_TIME"/>
      <column type="ref" name="OBSOLETE_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
    </table>

    <table name="ENT_ID_TBL">
      <column type="uuid" key="true" name="ENT_ID_ID" />
      <column type="ref" index="true" name="ENT_ID">
        <otherTable ref="ENT_TBL"/>
      </column>
      <column type="string" notNull="true" name="ISSUER" />
      <column type="string" notNull="true" name="VALUE" />
      <column type="string" name="CHECK_DIGIT" />
      <column type="date" name="ISSUED" />
      <column type="date" name="EXPIRY" />
    </table>
    
    <table name="ENT_ADDR_TBL">
      <column type="uuid" key="true" name="ADDR_ID" />
      <column type="ref" index="true" name="ENT_ID">
        <otherTable ref="ENT_TBL"/>
      </column>
      <column type="string" name="USE_TYPE" />
      <column type="string" name="ADDR_TYPE" />
      <column type="string" name="ADDR_STREET" />
      <column type="string" name="ADDR_PRECINCT" />
      <column type="string" name="ADDR_CITY" />
      <column type="string" name="ADDR_COUNTY" />
      <column type="string" name="ADDR_STATE" />
      <column type="string" name="ADDR_COUNTRY" />
      <column type="string" name="ADDR_POSTAL" />
      <column type="string" name="ADDR_CENSUS" />
    </table>

    <table name="ENT_NAME_TBL">
      <column type="uuid" key="true" name="NAME_ID" />
      <column type="ref" index="true" name="ENT_ID">
        <otherTable ref="ENT_TBL"/>
      </column>
      <column type="string" name="USE_TYPE" />
      <column type="string" name="NAME" />
      <column type="string" name="NAME_PREFIX" />
      <column type="string" name="NAME_GIVEN" />
      <column type="string" name="NAME_SUFFIX" />
      <column type="string" name="NAME_FAMILY" />
    </table>


    <table name="ORG_TBL">
      <column type="ref" name="NAME">
        <otherTable ref="ENT_NAME_TBL" />
      </column>
      <column type="ref" name="ADDR">
        <otherTable ref="ENT_ADDR_TBL" />
      </column>
      <column type="string" name="INDUSTRY" />
      <parent ref="ENT_TBL" />
    </table>

    <table name="MAT_TBL">
      <column type="string" name="NAME" />
      <parent ref="ENT_TBL" />
    </table>

    <table name="MMAT_TBL">
      <column type="string" name="LOT" />
      <column type="string" name="GTIN" />
      <column type="ref" name="MANUFACTURER">
        <otherTable ref="ORG_TBL" />
      </column>
      <parent ref="MAT_TBL" />
    </table>

    <table name="PLC_TBL">
      <column type="ref" name="NAME">
        <otherTable ref="ENT_NAME_TBL" />
      </column>
      <column type="ref" name="ADDR">
        <otherTable ref="ENT_ADDR_TBL" />
      </column>
      <column type="string" name="TEL" />
      <parent ref="ENT_TBL" />
    </table>

    <table name="PSN_TBL">
      <column type="ref" name="NAME">
        <otherTable ref="ENT_NAME_TBL" />
      </column>
      <column type="ref" name="ADDR">
        <otherTable ref="ENT_ADDR_TBL" />
      </column>
      <column type="string" name="TEL_HOME" />
      <column type="string" name="TEL_WORK" />
      <column type="string" name="TEL_CELL" />
      <column type="date" index="true" name="DOB" />
      <column type="date" name="DECEASED" />
      <column type="string" name="GENDER" />
      <column type="string" name="PRIMARY_LANGUAGE" />
      <column type="string" name="OCCUPATION" />
      <column type="string" name="VIP" />
      <column type="string" name="NATIONALITY" />
      <column type="ref" name="DEDICATED_FACILITY">
        <otherTable ref="PLC_TBL" />
      </column>
      <parent ref="ENT_TBL" />
    </table>

    <table name="PAT_TBL">
      <column type="int" name="MB_ORD" />
      <column type="string" name="LIVING_ARR" />
      <column type="string" name="RELIGION" />
      <column type="string" name="EHT_GROUP" />
      <column type="string" name="EDUCATION" />
      <column type="ref" name="MOTHER">
        <otherTable ref="PSN_TBL" />
      </column>
      <column type="ref" name="FATHER">
        <otherTable ref="PSN_TBL" />
      </column>
      <column type="ref" name="GUARDIAN">
        <otherTable ref="PSN_TBL" />
      </column>
      <column type="ref" name="REGISTRATION_FACILITY">
        <otherTable ref="PLC_TBL" />
      </column>
      <column type="ref" name="BIRTHPLACE">
        <otherTable ref="PLC_TBL" />
      </column>
      <column type="ref" name="CITIZENSHIP">
        <otherTable ref="PLC_TBL" />
      </column>
      <column type="ref" name="SCHOOL">
        <otherTable ref="ORG_TBL" />
      </column>
      <parent ref="PSN_TBL" />
    </table>

    <table name="USR_TBL">
      <column type="string" name="USERNAME" />
      <parent ref="PSN_TBL" />
    </table>

    <table name="PVD_TBL">
      <column type="ref" name="USER">
        <otherTable ref="USR_TBL" />
      </column>
      <parent ref="PSN_TBL" />
    </table>

    <table name="ACT_TBL">
      <column type="uuid" key="true" unique="true" notNull="true" name="ACT_ID" />
      <column type="uuid" notNull="true" unique="true" name="VERSION" />
      <column type="string" index="true" notNull="true" name="CLASS" />
      <column type="string" name="TEMPLATE" />
      <column type="string" notNull="true" name="MOOD" />
      <column type="string" notNull="true" name="STATUS" />
      <column type="bool" notNull="true" name="NEGATED" />
      <column type="string" name="TYPE" />
      <column type="date-time" name="TIME" />
      <column type="date-time" name="START" />
      <column type="date-time" name="STOP" />
      <column type="decimal" name="LAT"/>
      <column type="decimal" name="LNG"/>
      <column type="date-time" notNull="true" name="CREATED_TIME"/>
      <column type="ref" notNull="true" name="CREATED_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
      <column type="date-time" name="OBSOLETE_TIME"/>
      <column type="ref" name="OBSOLETE_BY">
        <otherTable ref="SEC_USR_TBL" />
      </column>
    </table>

    <table name="ACT_ID_TBL">
      <column type="uuid" key="true" name="ACT_ID_ID" />
      <column type="ref" index="true" name="ACT_ID">
        <otherTable ref="ACT_TBL"/>
      </column>
      <column type="string" notNull="true" name="ISSUER" />
      <column type="string" notNull="true" name="VALUE" />
      <column type="string" name="CHECK_DIGIT" />
      <column type="date" name="ISSUED" />
      <column type="date" name="EXPIRY" />
    </table>
    
    <table name="OBS_TBL">
      <column type="string" name="INTERPRETATION"/>
      <column type="string" name="VALUE_STR" />
      <column type="decimal" name="VALUE_QTY" />
      <column type="string" name="UNIT_OF_MEASURE" />
      <parent ref="ACT_TBL" />
    </table>

    <table name="PAT_ENC_TBL">
      <column type="string" name="DISPOSITION" />
      <column type="string" name="ADM_SOURCE" />
      <parent ref="ACT_TBL" />
    </table>

    <table name="PAT_ENC_ARG_TBL">
      <column type="uuid" key="true" unique="true" name="ARG_ID" />
      <column type="string" name="TYPE" />
      <column type="date-time" name="START" />
      <column type="date-time" name="STOP" />
      <column type="ref" name="ACT_ID">
        <otherTable ref="PAT_ENC_TBL" />
      </column>
    </table>

    <table name="SUB_ADM_TBL">
      <column type="string" name="SITE" />
      <column type="string" name="ROUTE"/>
      <column type="decimal" name="DOSE" />
      <column type="string" name="DOSE_UNIT"/>
      <column type="int" name="SEQUENCE" />
      <column type="ref" name="PRODUCT">
        <otherTable ref="MAT_TBL"/>
      </column>
      <parent ref="ACT_TBL" />
    </table>

    <table name="SUB_ADM_CONS_TBL">
      <column type="uuid" key="true" unique="true" notNull="true" name="REL_ID"/>
      <column type="ref" name="ACT_ID">
        <otherTable ref="SUB_ADM_TBL" />
      </column>
      <column type="ref" name="CONSUMED">
        <otherTable ref="MMAT_TBL" />
      </column>
      <column type="int" name="QTY" />
    </table>

  </schema>

  <dataFlows>
    <flow name="main">
      <pipeline>
        <log name="log_hello" priority="Informational">
          {{$principal}} is refreshing {{$targetMart}}
        </log>
        <connection name="warehouseDatabase" mode="read-write">
          <dataSource ref="#org.santedb.bi.dataSource.warehouse" />
        </connection>
        <connection name="mainDatabase" mode="read-only">
          <dataSource ref="#org.santedb.bi.dataSource.main" />
        </connection>
        <transaction name="main_transaction">
          <connection ref="warehouseDatabase" />
          <pipeline>
            <call>
              <dataFlow ref="users" />
              <args>
                <ref name="input">
                  <value ref="mainDatabase" />
                </ref>
                <ref name="output">
                  <value ref="warehouseDatabase" />
                </ref>
              </args>
            </call>
            <call>
              <dataFlow ref="entities" />
              <args>
                <ref name="input">
                  <value ref="mainDatabase" />
                </ref>
                <ref name="output">
                  <value ref="warehouseDatabase" />
                </ref>
              </args>
            </call>
            <call>
              <dataFlow ref="identifiers" />
              <args>
                <ref name="input">
                  <value ref="mainDatabase" />
                </ref>
                <ref name="output">
                  <value ref="warehouseDatabase" />
                </ref>
              </args>
            </call>
            <call>
              <dataFlow ref="addresses" />
              <args>
                <ref name="input">
                  <value ref="mainDatabase" />
                </ref>
                <ref name="output">
                  <value ref="warehouseDatabase" />
                </ref>
              </args>
            </call>
            <call>
              <dataFlow ref="names" />
              <args>
                <ref name="input">
                  <value ref="mainDatabase" />
                </ref>
                <ref name="output">
                  <value ref="warehouseDatabase" />
                </ref>
              </args>
            </call>
          </pipeline>
        </transaction>
      </pipeline>
    </flow>
    <flow name="addresses">
      <parameters>
        <ref name="input" />
        <ref name="output" />
      </parameters>
      <pipeline>
        <log name="log_start" priority="Verbose">Start Pivot Addresses {{input}}</log>
        <reader name="source_addresses">
          <connection ref="input" />
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[
                        SELECT 
                            ADDR_ID,
                            ENT_ID, 
                            ADT.MNEMONIC AS USE_TYPE,
                            PT.MNEMONIC AS PART_TYPE,
                            VAL
                        FROM 
                            ENT_ADDR_CMP_TBL
                            INNER JOIN ENT_ADDR_TBL USING (ADDR_ID)
                            INNER JOIN CD_VRSN_TBL PT ON (PT.CD_ID = ENT_ADDR_CMP_TBL.TYP_CD_ID) 
                            INNER JOIN CD_VRSN_TBL ADT ON (ADT.CD_ID = ENT_ADDR_TBL.USE_CD_ID) 
                        WHERE
                          ENT_ADDR_TBL.OBSLT_VRSN_SEQ_ID IS NULL
                        ORDER BY ADDR_ID, ENT_ID
                        ]]>
            </add>
          </sql>
        </reader>
        <crosstab name="pivot_addresses">
          <input ref="source_addresses" />
          <pivot fn="first" key="ent_id" value="val" columnDef="part_type">
            <columns>
              <add>Country</add>
              <add>State</add>
              <add>AddressLine</add>
              <add>Precinct</add>
              <add>City</add>
              <add>PostalCode</add>
              <add>CensusTract</add>
            </columns>
          </pivot>
        </crosstab>
        <map name="map_addresses">
          <input ref="pivot_addresses" />
          <map>
            <source name="ADDR_ID" />
            <target name="ADDR_ID" />
          </map>
          <map>
            <source name="ENT_ID" />
            <target name="ENT_ID" />
          </map>
          <map>
            <source name="USE_TYPE" />
            <target name="USE_TYPE" />
          </map>
          <map>
            <source name="Country" />
            <target name="ADDR_COUNTRY" />
          </map>
          <map>
            <source name="State" />
            <target name="ADDR_STATE" />
          </map>
          <map>
            <source name="County" />
            <target name="ADDR_COUNTY" />
          </map>
          <map>
            <source name="AddressLine" />
            <target name="ADDR_STATE" />
          </map>
          <map>
            <source name="Precinct" />
            <target name="ADDR_PRECINCT" />
          </map>
          <map>
            <source name="City" />
            <target name="ADDR_CITY" />
          </map>
          <map>
            <source name="PostalCode" />
            <target name="ADDR_POSTAL" />
          </map>
          <map>
            <source name="CensusTract" />
            <target name="ADDR_CENSUS" />
          </map>
        </map>
        <writer mode="insert" name="write_addresses">
          <input ref="map_addresses" />
          <connection ref="output" />
          <target ref="ENT_ADDR_TBL" />
        </writer>
      </pipeline>
    </flow>
    <flow name="names">
      <parameters>
        <ref name="input" />
        <ref name="output" />
      </parameters>
      <pipeline>
        <log name="log_start" priority="Verbose">Start Pivot Names {{input}}</log>
        <reader name="source_names">
          <connection ref="input" />
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[
                        SELECT 
                            NAME_ID,
                            ENT_ID, 
                            NT.MNEMONIC AS USE_TYPE,
                            COALESCE(PT.MNEMONIC, 'Other') AS PART_TYPE,
                            VAL
                        FROM 
                            ENT_NAME_CMP_TBL
                            INNER JOIN ENT_NAME_TBL USING (NAME_ID)
                            LEFT JOIN CD_VRSN_TBL PT ON (PT.CD_ID = ENT_NAME_CMP_TBL.TYP_CD_ID) 
                            INNER JOIN CD_VRSN_TBL NT ON (NT.CD_ID = ENT_NAME_TBL.USE_CD_ID) 
                        WHERE
                          ENT_NAME_TBL.OBSLT_VRSN_SEQ_ID IS NULL
                        ORDER BY NAME_ID, ENT_ID
                        
                        ]]>
            </add>
          </sql>
        </reader>
        <crosstab name="pivot_names">
          <input ref="source_names" />
          <pivot fn="first" key="ent_id" value="val" columnDef="part_type">
            <columns>
              <add>Other</add>
              <add>Given</add>
              <add>Family</add>
              <add>Prefix</add>
              <add>Suffix</add>
            </columns>
          </pivot>
        </crosstab>
        <map name="map_names">
          <input ref="pivot_names" />
          <map>
            <source name="ENT_ID" />
            <target name="ENT_ID" />
          </map>
          <map>
            <source name="NAME_ID" />
            <target name="NAME_ID" />
          </map>
          <map>
            <source name="USE_TYPE" />
            <target name="USE_TYPE" />
          </map>
          <map>
            <source name="Other" />
            <target name="NAME" />
          </map>
          <map>
            <source name="Prefix" />
            <target name="NAME_PREFIX" />
          </map>
          <map>
            <source name="Suffix" />
            <target name="NAME_SUFFIX" />
          </map>
          <map>
            <source name="Given" />
            <target name="NAME_GIVEN" />
          </map>
          <map>
            <source name="Family" />
            <target name="NAME_FAMILY" />
          </map>
        </map>
        <writer mode="insert" name="write_names">
          <input ref="map_names" />
          <connection ref="output" />
          <target ref="ENT_NAME_TBL" />
        </writer>
      </pipeline>
    </flow>
    <flow name="users">
      <parameters>
        <ref name="input"/>
        <ref name="output"/>
      </parameters>
      <pipeline>
        <log name="log_start" priority="Verbose">Start Security Users {{input}}</log>
        <reader name="source_users">
          <connection ref="input" />
          <schema ref="SEC_USR_TBL"/>
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[ 
                SELECT 
	                SEC_USR_TBL.USR_ID,
	                USR_NAME AS USERNAME,
	                CRT_UTC AS CREATED_TIME,
	                CRT_PROV.USR_ID AS CREATED_BY,
	                LAST_LOGIN_UTC AS LAST_LOGIN_DATE,
	                EMAIL,
	                PHN_NUM AS PHONE,
	                OBSLT_UTC AS OBSOLETE_TIME,
	                OBS_PROV.USR_ID AS OBSOLETE_BY
                FROM 
	                SEC_USR_TBL 
	                INNER JOIN SEC_PROV_TBL AS CRT_PROV ON (SEC_USR_TBL.CRT_PROV_ID = CRT_PROV.PROV_ID)
	                LEFT JOIN SEC_PROV_TBL AS OBS_PROV ON (SEC_USR_TBL.OBSLT_PROV_ID = OBS_PROV.PROV_ID)
              ]]>
            </add>
          </sql>
        </reader>
        <writer truncate="true" mode="insert" name="write_users">
          <input ref="source_users"/>
          <connection ref="output" />
          <target ref="SEC_USR_TBL" />
        </writer>
      </pipeline>
    </flow>
    <flow name="identifiers">
      <parameters>
        <ref name="input" />
        <ref name="output" />
      </parameters>
      <pipeline>
        <log name="log_start" priority="Verbose">Start Identifiers {{input}}</log>
        <reader name="source_ent_id">
          <connection ref="input" />
          <schema ref="ENT_ID_TBL"/>
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[ 
                        SELECT 
                            ENT_ID_TBL.ENT_ID_ID,
                            ENT_ID_TBL.ENT_ID,
                            ID_VAL AS VALUE,
                            ID_DMN_TBL.NSID AS ISSUER,
                            CHK_DGT AS CHECK_DIGIT,
                            ISS_DT AS ISSUED,
                            EXP_DT AS EXPIRY
                        FROM
                            ENT_ID_TBL
                            INNER JOIN ID_DMN_TBL USING (DMN_ID)
                        WHERE
                            ENT_ID_TBL.OBSLT_VRSN_SEQ_ID IS NULL
                            AND ID_DMN_TBL.OBSLT_UTC IS NULL
                        ]]>
            </add>
          </sql>
        </reader>
        <reader name="source_act_id">
          <connection ref="input" />
          <schema ref="ACT_ID_TBL"/>
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[ 
                        SELECT 
                            ACt_ID_TBL.ACT_ID_ID,
                            ACT_ID_TBL.ACT_ID,
                            ID_VAL AS VALUE,
                            ID_DMN_TBL.NSID AS ISSUER,
                            CHK_DGT AS CHECK_DIGIT,
                            ISS_DT AS ISSUED,
                            EXP_DT AS EXPIRY
                        FROM
                            ACT_ID_TBL
                            INNER JOIN ID_DMN_TBL USING (DMN_ID)
                        WHERE
                            ACT_ID_TBL.OBSLT_VRSN_SEQ_ID IS NULL
                            AND ID_DMN_TBL.OBSLT_UTC IS NULL
                        ]]>
            </add>
          </sql>
        </reader>
        <writer truncate="true" mode="insert" name="write_ent_ids">
          <input ref="source_ent_id" />
          <connection ref="output" />
          <target ref="ENT_ID_TBL" />
        </writer>
        <writer truncate="true" mode="insert" name="write_act_ids">
          <input ref="source_act_id" />
          <connection ref="output" />
          <target ref="ACT_ID_TBL" />
        </writer>
      </pipeline>
    </flow>
    <flow name="entities">
      <parameters>
        <ref name="input" />
        <ref name="output" />
      </parameters>
      <pipeline>
        <log name="log_start" priority="Verbose">Start Entities {{input}}</log>
        <reader name="source_entities">
          <connection ref="input" />
          <sql>
            <add>
              <providers>
                <invariant>npgsql</invariant>
                <invariant>FirebirdSQL</invariant>
                <invariant>sqlite</invariant>
              </providers>
              <![CDATA[ 
                        SELECT 
                            ENT_VRSN_TBL.ENT_ID,
                            ENT_VRSN_TBL.ENT_VRSN_ID AS VERSION,
                            CLS.MNEMONIC AS CLASS,
                            DTR.MNEMONIC AS DETERMINER,
                            ENT_VRSN_TBL.CRT_UTC AS CREATED_TIME,
                            SEC_PROV_TBL.USR_ID AS CREATED_BY
                        FROM
                            ENT_VRSN_TBL
                            INNER JOIN CD_VRSN_TBL CLS ON (CLS_CD_ID = CLS.CD_ID)
                            INNER JOIN CD_VRSN_TBL DTR ON (DTR_CD_ID = DTR.CD_ID)
                            INNER JOIN SEC_PROV_TBL ON (ENT_VRSN_TBL.CRT_PROV_ID = SEC_PROV_TBL.PROV_ID)
                        WHERE
                            ENT_VRSN_TBL.HEAD = TRUE
                            AND ENT_VRSN_TBL.OBSLT_UTC IS NULL
                        ]]>
            </add>
          </sql>
        </reader>
        <writer truncate="true" mode="insert" name="write_entities">
          <input ref="source_entities" />
          <connection ref="output" />
          <target ref="ENT_TBL" />
        </writer>
      </pipeline>
    </flow>
  </dataFlows>

</BiDatamartDefinition>